@page "/cadastro"
@layout Components.Layout.EmptyLayout
@inject NavigationManager NavigationManager
@inject IEstadoService estadoService
@inject ICidadeService cidadeService
@inject IUsuarioService usuarioService

@using Eventify.Models
@using Eventify.Mapping
@using Eventify.Core.Entities

<div class="register-page-wrapper">
    <div class="gradient-panel">
        <h2 class="app-title">EVENTIFY</h2>
    </div>

    <div class="register-form-panel">
        <h2 class="welcome-text">CRIE SUA CONTA</h2>

        <EditForm Model="usuarioModel" OnValidSubmit="CadastrarUsuario" class="register-form">
            <DataAnnotationsValidator />

            <div class="form-grid">
                <div class="form-group">
                    <label>Nome Completo</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Nome" />
                    <ValidationMessage For="@(() => usuarioModel.Nome)" />
                </div>
                <div class="form-group">
                    <label>CPF</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Cpf" />
                    <ValidationMessage For="@(() => usuarioModel.Cpf)" />
                </div>
                <div class="form-group">
                    <label>Data de Nascimento</label>
                    <InputDate class="form-control" @bind-Value="usuarioModel.Dt_Nascimento" />
                    <ValidationMessage For="@(() => usuarioModel.Dt_Nascimento)" />
                </div>
                <div class="form-group">
                    <label>Celular</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Celular" />
                    <ValidationMessage For="@(() => usuarioModel.Celular)" />
                </div>
                <div class="form-group form-span-2">
                    <label>Email</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Email" />
                    <ValidationMessage For="@(() => usuarioModel.Email)" />
                </div>
                <div class="form-group">
                    <label>Senha</label>
                    <InputText type="password" class="form-control" @bind-Value="usuarioModel.Senha" />
                    <ValidationMessage For="@(() => usuarioModel.Senha)" />
                </div>
                <div class="form-group">
                    <label>Confirmar Senha</label>
                    <InputText type="password" class="form-control" @bind-Value="usuarioModel.ConfirmarSenha" />
                    <ValidationMessage For="@(() => usuarioModel.ConfirmarSenha)" />
                </div>

                <div class="form-group">
                    <label>CEP</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Endereco.Cep" />
                    <ValidationMessage For="@(() => usuarioModel.Endereco.Cep)" />
                </div>

                <div class="form-group">
                    <label>Estado (UF)</label>
                    <InputSelect class="form-select" @bind-Value="SelectedEstadoId">
                        <option value="">Selecione um Estado</option>
                        @foreach (var estado in listaDeEstados)
                        {
                            <option value="@estado.Id">@estado.Sigla</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => usuarioModel.Endereco.EstadoId)" />
                </div>

                <div class="form-group form-span-2">
                    <label>Cidade</label>
                    <InputSelect class="form-select" @bind-Value="usuarioModel.Endereco.CidadeId"
                                 disabled="@(SelectedEstadoId == null || carregandoCidades)">
                        @if (carregandoCidades)
                        {
                            <option>Carregando cidades...</option>
                        }
                        else if (SelectedEstadoId.HasValue)
                        {
                            <option value="">Selecione uma Cidade</option>
                            @foreach (var cidade in listaDeCidadesDisponiveis)
                            {
                                <option value="@cidade.Id">@cidade.Nome</option>
                            }
                        }
                        else
                        {
                            <option>Selecione um estado primeiro</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => usuarioModel.Endereco.CidadeId)" />
                </div>

                <div class="form-group form-span-2">
                    <label>Rua</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Endereco.Rua" />
                    <ValidationMessage For="@(() => usuarioModel.Endereco.Rua)" />
                </div>
                <div class="form-group">
                    <label>Bairro</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Endereco.Bairro" />
                    <ValidationMessage For="@(() => usuarioModel.Endereco.Bairro)" />
                </div>
                <div class="form-group">
                    <label>Número</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Endereco.Numero" />
                    <ValidationMessage For="@(() => usuarioModel.Endereco.Numero)" />
                </div>
                <div class="form-group form-span-2">
                    <label>Complemento</label>
                    <InputText class="form-control" @bind-Value="usuarioModel.Endereco.Complemento" />
                </div>
            </div>

            <button type="submit" class="btn btn-primary btn-block register-button mt-4">Cadastrar</button>

            <div class="login-link-section mt-3">
                <span>Já possui uma conta? </span>
                <a href="#" @onclick="NavegarParaLogin" @onclick:preventDefault class="fw-bold text-decoration-none">Faça Login</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private UsuarioModel usuarioModel = new UsuarioModel();

    private List<Estado> listaDeEstados = new();
    private List<Cidade> listaDeCidadesDisponiveis = new();
    private bool carregandoCidades = false;

    protected override async Task OnInitializedAsync()
    {
        listaDeEstados = await estadoService.GetAllAsync();
    }

    private Guid? _selectedEstadoId;
    private Guid? SelectedEstadoId
    {
        get => _selectedEstadoId;
        set
        {
            if (_selectedEstadoId == value) return;
            _selectedEstadoId = value;

            usuarioModel.Endereco.EstadoId = value;
            usuarioModel.Endereco.CidadeId = null;
            listaDeCidadesDisponiveis.Clear();

            if (_selectedEstadoId.HasValue)
            {
                _ = CarregarCidadesDoEstado(_selectedEstadoId.Value);
            }
        }
    }

    private async Task CarregarCidadesDoEstado(Guid estadoId)
    {
        carregandoCidades = true;
        StateHasChanged();
        try
        {
            listaDeCidadesDisponiveis = await cidadeService.ProcurarPorUF(estadoId);
        }
        finally
        {
            carregandoCidades = false;
            StateHasChanged();
        }
    }

    private async Task CadastrarUsuario()
    {
        try
        {
            var usuarioParaSalvar = UsuarioMapper.ToEntity(usuarioModel, listaDeCidadesDisponiveis);

            await usuarioService.CriarNovoUsuarioAsync(usuarioParaSalvar);

            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"ERRO NO CADASTRO: {ex.Message}");
        }
    }

    private void NavegarParaLogin()
    {
        NavigationManager.NavigateTo("/");
    }
}